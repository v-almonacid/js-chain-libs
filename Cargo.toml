[package]
name = "js-chain-libs"
version = "0.6.1"
authors = ["Enzo Cioppettini <ecioppettini@atixlabs.com>", "Sebastien Guillemot <sebastien@emurgo.io>"]
edition = "2018"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/input-output-hk/js-chain-libs"
homepage = "https://github.com/input-output-hk/js-chain-libs#js-chain-libs"
description = """
JÃ¶rmungandr library, wallet and stake pool management."""

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.55", features=["serde-serialize"] }
chain-addr = { path = "./chain-libs/chain-addr" }
chain-impl-mockchain = { path = "./chain-libs/chain-impl-mockchain" }
chain-crypto = { path = "./chain-libs/chain-crypto" }
chain-core = { path = "./chain-libs/chain-core" }
chain-time    = { path = "./chain-libs/chain-time" }
serde = { version = "1.0.93", features = ["derive"] }
bech32 = "0.6"
hex = "0.4.0"
js-sys = "0.3.24"
rand_os = { version = "0.1", features = ["wasm-bindgen"] }

# The default can't be compiled to wasm, so it's necessary to use either the 'nightly'
# feature or this one
clear_on_drop = { version = "0.2", features = ["no_cc"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
